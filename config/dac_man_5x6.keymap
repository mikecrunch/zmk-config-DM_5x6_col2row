#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define RAISE   1
#define LOWER   2
#define ADJUST   3

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };

    macros {
        shiftleft: shiftleft {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LEFT)>;
            label = "SHIFTLEFT";
        };

        shiftright: shiftright {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(RIGHT_ARROW)>;
            label = "SHIFTRIGHT";
        };

        ctrlshitdown: ctrlshitdown {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(PAGE_DOWN))>;
            label = "CTRLSHITDOWN";
        };

        ctrlshiftup: ctrlshiftup {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(PAGE_UP))>;
            label = "CTRLSHIFTUP";
        };

        cmdoptilnl: cmdoptilnl {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LA(L))>;
            label = "CMDOPTILNL";
        };

        bookmark: bookmark {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LA(B))>;
            label = "BOOKMARK";
        };

        jumpmain: jumpmain {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(F2)>;
            label = "JUMPMAIN";
        };

        focus: focus {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(F7)>;
            label = "FOCUS";
        };

        newtab: newtab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(T)>;
            label = "NEWTAB";
        };

        closetab: closetab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(W)>;
            label = "CLOSETAB";
        };

        left: left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LEFT_ARROW)>;
            label = "LEFT";
        };

        right: right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(RIGHT)>;
            label = "RIGHT";
        };

        tableft: tableft {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LG(LEFT)>;
            label = "TABLEFT";
        };

        chromeright: chromeright {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LG(RIGHT)>;
            label = "CHROMERIGHT";
        };

        selectforward: selectforward {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LC(TAB)>;
            label = "SELECTFORWARD";
        };

        chromeback: chromeback {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(LC(TAB))>, <&macro_press>, <&macro_press>;

            label = "CHROMEBACK";
        };

        language: language {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(F5)>;
            label = "LANGUAGE";
        };

        cmdL: cmdL {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LG(L)>;
            label = "CMDL";
        };

        new_macro: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>;
            label = "NEW_MACRO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESC       &kp N1  &kp N2    &kp N3         &kp NUMBER_4                 &kp N5                                          &kp N6                 &kp N7                            &kp N8     &kp N9     &kp N0         &kp BSPC
&kp TAB       &kp Q   &kp W     &kp E          &kp R                        &kp T                                           &kp Y                  &kp U                             &kp I      &kp O      &kp P          &kp BSLH
&language     &kp A   &kp S     &kp D          &kp F                        &kp G                                           &kp H                  &kp J                             &kp K      &kp L      &kp SEMICOLON  &kp SQT
&kp LEFT_GUI  &kp Z   &kp X     &kp C          &kp V                        &kp B                                           &kp N                  &kp M                             &kp COMMA  &kp DOT    &kp FSLH       &kp RALT
                      &kp LBKT  &mt LGUI RBKT                                                                                                                                        &kp MINUS  &kp EQUAL
                                               &mt LG(BACKSPACE) BACKSPACE  &lt 1 SPACE                                     &lt 2 ENTER            &mt LEFT_SHIFT RIGHT_PARENTHESIS
                                                                            &kp LG(V)    &left      &right                  &kp LS(LC(LG(EQUAL)))
                                                                            &kp LG(C)    &kp LG(Z)  &kp LA(LS(LG(ESCAPE)))  &kp LS(QUESTION)
            >;
        };

        raise {
            bindings = <
&kp LA(D)  &kp F1     &kp F2       &kp F3     &kp F4     &kp F5                        &kp F6                 &kp F7  &kp F8     &kp F9     &kp LC(U)    &kp LC(K)
&trans     &kp LG(W)  &kp LC(A)    &kp LC(E)  &trans     &kp LBKT                      &kp RBKT               &trans  &trans     &trans     &cmdoptilnl  &kp F12
&trans     &kp HOME   &kp PG_UP    &kp PG_DN  &kp LG(D)  &kp LPAR                      &kp RPAR               &focus  &jumpmain  &bookmark  &kp MINUS    &kp PIPE
&bookmark  &jumpmain  &focus       &newtab    &closetab  &chromeright                  &trans                 &trans  &trans     &trans     &kp FSLH     &kp UNDER
                      &chromeback  &cmdL                                                                              &trans     &trans
                                              &trans     &sys_reset                    &mt LG(RETURN) RETURN  &trans
                                                         &trans        &trans  &trans  &ctrlshiftup
                                                         &trans        &trans  &trans  &ctrlshitdown
            >;
        };

        lower {
            bindings = <
&kp GRAVE  &kp F1     &kp F2         &kp F3        &kp F4          &kp F5                                      &kp F6       &kp F7      &kp F8   &kp F9    &kp F10  &kp F11
&trans     &kp LG(W)  &chromeback    &kp UP_ARROW  &selectforward  &kp C_VOL_UP                                &kp K_CALC   &kp KP_NUM  &kp INS  &kp SLCK  &trans   &kp F12
&trans     &kp LG(D)  &kp LEFT       &kp DOWN      &kp RIGHT       &kp C_VOL_DN                                &trans       &kp H       &kp J    &kp K     &kp L    &trans
&trans     &trans     &tableft       &shiftright   &chromeright    &kp C_MUTE                                  &bootloader  &trans      &trans   &trans    &trans   &trans
                      &ctrlshitdown  &ctrlshiftup                                                                                       &trans   &trans
                                                   &kp LG(LS(R))   &kp LG(E)                                   &trans       &trans
                                                                   &kp LG(LS(J))     &kp LG(LS(G))     &trans  &trans
                                                                   &kp LG(NUMBER_1)  &kp LG(NUMBER_2)  &trans  &trans
            >;
        };

        adjust {
            bindings = <
&bt BT_CLR  &trans        &trans        &trans        &trans        &trans                        &trans        &trans        &trans        &trans        &trans        &bt BT_CLR
&trans      &trans        &trans        &trans        &trans        &trans                        &trans        &trans        &trans        &trans        &trans        &trans
&trans      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &trans
&trans      &trans        &trans        &trans        &trans        &trans                        &trans        &trans        &trans        &trans        &trans        &trans
                          &trans        &trans                                                                                &trans        &trans
                                                      &trans        &trans                        &trans        &trans
                                                                    &bootloader   &trans  &trans  &bootloader
                                                                    &trans        &trans  &trans  &trans
            >;
        };
    };
};
